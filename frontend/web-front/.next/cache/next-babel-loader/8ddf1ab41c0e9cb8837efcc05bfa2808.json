{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/app/frontend/src/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nexport default _s(() => {\n  _s();\n\n  const {\n    0: todos,\n    1: setTodo\n  } = useState([]);\n\n  const getAPIData = async () => {\n    let instance;\n    instance = axios.create({\n      baseURL: 'http://localhost:8080'\n    });\n\n    try {\n      const response = await instance.get('/api/');\n      console.log(response === null || response === void 0 ? void 0 : response.data);\n      const tododata = response === null || response === void 0 ? void 0 : response.data;\n      setTodo(tododata);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"hello world\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getAPIData,\n      children: \"click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), todos.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}, \"AHDAwrrftur23arF5TvlQO1ChIo=\");","map":{"version":3,"sources":["/home/app/frontend/src/pages/index.tsx"],"names":["React","useState","axios","todos","setTodo","getAPIData","instance","create","baseURL","response","get","console","log","data","tododata","error","map","item","title","body","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,KAAP,MAAqC,OAArC;AAQA,kBAAgB,MAAM;AAAA;;AAClB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAmBH,QAAQ,CAAS,EAAT,CAAjC;;AAEA,QAAMI,UAAU,GAAG,YAAY;AAC3B,QAAIC,QAAJ;AAEAA,IAAAA,QAAQ,GAAGJ,KAAK,CAACK,MAAN,CAAa;AACpBC,MAAAA,OAAO,EAAE;AADW,KAAb,CAAX;;AAIA,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAACI,GAAT,CAAa,OAAb,CAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,aAAYA,QAAZ,uBAAYA,QAAQ,CAAEI,IAAtB;AACA,YAAMC,QAAQ,GAAGL,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEI,IAA3B;AACAT,MAAAA,OAAO,CAACU,QAAD,CAAP;AACH,KALD,CAKE,OAAOC,KAAP,EAAc;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH;AACJ,GAfD;;AAgBA,sBACI;AAAA,2CAEI;AAAQ,MAAA,OAAO,EAAEV,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKF,KAAK,CAACa,GAAN,CAAWC,IAAD,iBACP;AAAA,8BACI;AAAA,kBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,OAAUF,IAAI,CAACG,EAAf;AAAA;AAAA;AAAA;AAAA,YADH,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA/BD","sourcesContent":["import React, { FC, useEffect, useState } from 'react'\nimport axios, { AxiosInstance } from 'axios'\n\ntype Todo = {\n    id: String\n    title: String\n    body: String\n}\n\nexport default (() => {\n    const [todos, setTodo] = useState<Todo[]>([])\n\n    const getAPIData = async () => {\n        let instance: AxiosInstance\n\n        instance = axios.create({\n            baseURL: 'http://localhost:8080',\n        })\n\n        try {\n            const response = await instance.get('/api/')\n            console.log(response?.data)\n            const tododata = response?.data as Todo[]\n            setTodo(tododata)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    return (\n        <div>\n            hello world\n            <button onClick={getAPIData}>click</button>\n            {todos.map((item) => (\n                <div key={item.id}>\n                    <h1>{item.title}</h1>\n                    <p>{item.body}</p>\n                </div>\n            ))}\n        </div>\n    )\n}) as FC"]},"metadata":{},"sourceType":"module"}