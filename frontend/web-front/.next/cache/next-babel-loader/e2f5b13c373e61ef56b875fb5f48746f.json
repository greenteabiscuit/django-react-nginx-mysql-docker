{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _unfetch = _interopRequireDefault(require(\"next/dist/build/polyfills/unfetch\"));\n\nvar _eventSourcePolyfill = _interopRequireDefault(require(\"./event-source-polyfill\"));\n\nvar _eventsource = require(\"./error-overlay/eventsource\");\n\nvar _onDemandEntriesUtils = require(\"./on-demand-entries-utils\");\n\nvar _fouc = require(\"./fouc\");\n/* globals __webpack_hash__ */\n\n\nif (!window.EventSource) {\n  window.EventSource = _eventSourcePolyfill.default;\n}\n\nconst data = JSON.parse(document.getElementById('__NEXT_DATA__').textContent);\nlet {\n  assetPrefix,\n  page\n} = data;\nassetPrefix = assetPrefix || '';\nlet mostRecentHash = null;\n/* eslint-disable-next-line */\n\nlet curHash = __webpack_hash__;\nconst hotUpdatePath = assetPrefix + (assetPrefix.endsWith('/') ? '' : '/') + '_next/static/webpack/'; // Is there a newer version of this code available?\n\nfunction isUpdateAvailable() {\n  // __webpack_hash__ is the hash of the current compilation.\n  // It's a global variable injected by Webpack.\n\n  /* eslint-disable-next-line */\n  return mostRecentHash !== __webpack_hash__;\n} // Webpack disallows updates in other states.\n\n\nfunction canApplyUpdates() {\n  return module.hot.status() === 'idle';\n} // This function reads code updates on the fly and hard\n// reloads the page when it has changed.\n\n\nasync function tryApplyUpdates() {\n  if (!isUpdateAvailable() || !canApplyUpdates()) {\n    return;\n  }\n\n  try {\n    const res = await (0, _unfetch.default)(`${hotUpdatePath}${curHash}.hot-update.json`);\n    const jsonData = await res.json();\n    const curPage = page === '/' ? 'index' : page; // webpack 5 uses an array instead\n\n    const pageUpdated = (Array.isArray(jsonData.c) ? jsonData.c : Object.keys(jsonData.c)).some(mod => {\n      return mod.indexOf(`pages${curPage.substr(0, 1) === '/' ? curPage : `/${curPage}`}`) !== -1 || mod.indexOf(`pages${curPage.substr(0, 1) === '/' ? curPage : `/${curPage}`}`.replace(/\\//g, '\\\\')) !== -1;\n    });\n\n    if (pageUpdated) {\n      document.location.reload(true);\n    } else {\n      curHash = mostRecentHash;\n    }\n  } catch (err) {\n    console.error('Error occurred checking for update', err);\n    document.location.reload(true);\n  }\n}\n\n(0, _eventsource.getEventSourceWrapper)({\n  path: `${assetPrefix}/_next/webpack-hmr`\n}).addMessageListener(event => {\n  if (event.data === '\\uD83D\\uDC93') {\n    return;\n  }\n\n  try {\n    const message = JSON.parse(event.data);\n\n    if (message.action === 'sync' || message.action === 'built') {\n      if (!message.hash) {\n        return;\n      }\n\n      mostRecentHash = message.hash;\n      tryApplyUpdates();\n    } else if (message.action === 'reloadPage') {\n      document.location.reload(true);\n    }\n  } catch (ex) {\n    console.warn('Invalid HMR message: ' + event.data + '\\n' + ex);\n  }\n});\n(0, _onDemandEntriesUtils.setupPing)(assetPrefix, () => page);\n(0, _fouc.displayContent)();","map":{"version":3,"sources":["../../../client/dev/amp-dev.js"],"names":["window","EventSourcePolyfill","data","JSON","document","assetPrefix","mostRecentHash","curHash","hotUpdatePath","module","isUpdateAvailable","canApplyUpdates","res","jsonData","curPage","page","pageUpdated","Array","Object","mod","console","path","event","message","tryApplyUpdates"],"mappings":";;;;AACA,IAAA,QAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,mCAAA,CAAA,CAAA;;AACA,IAAA,oBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,yBAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,6BAAA,CAAA;;AACA,IAAA,qBAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;;AACA,IAAA,KAAA,GAAA,OAAA,CAAA,QAAA,CAAA;AALA;;;AAOA,IAAI,CAACA,MAAM,CAAX,WAAA,EAAyB;AACvBA,EAAAA,MAAM,CAANA,WAAAA,GAAqBC,oBAAAA,CAArBD,OAAAA;AAGF;;AAAA,MAAME,IAAI,GAAGC,IAAI,CAAJA,KAAAA,CAAWC,QAAQ,CAARA,cAAAA,CAAAA,eAAAA,EAAxB,WAAaD,CAAb;AACA,IAAI;AAAA,EAAA,WAAA;AAAA,EAAA;AAAA,IAAJ,IAAA;AACAE,WAAW,GAAGA,WAAW,IAAzBA,EAAAA;AACA,IAAIC,cAAc,GAAlB,IAAA;AACA;;AACA,IAAIC,OAAO,GAAX,gBAAA;AACA,MAAMC,aAAa,GACjBH,WAAW,IAAIA,WAAW,CAAXA,QAAAA,CAAAA,GAAAA,IAAAA,EAAAA,GAAfA,GAAW,CAAXA,GADF,uBAAA,C,CAGA;;AACA,SAAA,iBAAA,GAA6B;AAC3B;AACA;;AACA;AACA,SAAOC,cAAc,KAArB,gBAAA;AAGF,C,CAAA;;;AACA,SAAA,eAAA,GAA2B;AACzB,SAAOG,MAAM,CAANA,GAAAA,CAAAA,MAAAA,OAAP,MAAA;AAGF,C,CAAA;AACA;;;AACA,eAAA,eAAA,GAAiC;AAC/B,MAAI,CAACC,iBAAD,EAAA,IAAwB,CAACC,eAA7B,EAAA,EAAgD;AAC9C;AAEF;;AAAA,MAAI;AACF,UAAMC,GAAG,GAAG,MAAM,CAAA,GAAA,QAAA,CAAA,OAAA,EAAO,GAAEJ,aAAc,GAAED,OAA3C,kBAAkB,CAAlB;AACA,UAAMM,QAAQ,GAAG,MAAMD,GAAG,CAA1B,IAAuBA,EAAvB;AACA,UAAME,OAAO,GAAGC,IAAI,KAAJA,GAAAA,GAAAA,OAAAA,GAAhB,IAAA,CAHE,CAIF;;AACA,UAAMC,WAAW,GAAG,CAACC,KAAK,CAALA,OAAAA,CAAcJ,QAAQ,CAAtBI,CAAAA,IACjBJ,QAAQ,CADSI,CAAAA,GAEjBC,MAAM,CAANA,IAAAA,CAAYL,QAAQ,CAFJ,CAEhBK,CAFgB,EAAA,IAAA,CAGZC,GAAD,IAAS;AACd,aACEA,GAAG,CAAHA,OAAAA,CACG,QAAOL,OAAO,CAAPA,MAAAA,CAAAA,CAAAA,EAAAA,CAAAA,MAAAA,GAAAA,GAAAA,OAAAA,GAA0C,IAAGA,OAAQ,EAD/DK,EAAAA,MAEM,CAFNA,CAAAA,IAGAA,GAAG,CAAHA,OAAAA,CACG,QACCL,OAAO,CAAPA,MAAAA,CAAAA,CAAAA,EAAAA,CAAAA,MAAAA,GAAAA,GAAAA,OAAAA,GAA0C,IAAGA,OAAQ,EADvD,EAAC,CAAD,OAAC,CAAD,KAAC,EADHK,IACG,CADHA,MAIM,CARR,CAAA;AAJF,KAAoB,CAApB;;AAgBA,QAAA,WAAA,EAAiB;AACff,MAAAA,QAAQ,CAARA,QAAAA,CAAAA,MAAAA,CAAAA,IAAAA;AADF,KAAA,MAEO;AACLG,MAAAA,OAAO,GAAPA,cAAAA;AAEH;AAAC,GA1BF,CA0BE,OAAA,GAAA,EAAY;AACZa,IAAAA,OAAO,CAAPA,KAAAA,CAAAA,oCAAAA,EAAAA,GAAAA;AACAhB,IAAAA,QAAQ,CAARA,QAAAA,CAAAA,MAAAA,CAAAA,IAAAA;AAEH;AAED;;AAAA,CAAA,GAAA,YAAA,CAAA,qBAAA,EAAsB;AACpBiB,EAAAA,IAAI,EAAG,GAAEhB,WADX;AAAsB,CAAtB,EAAA,kBAAA,CAEuBiB,KAAD,IAAW;AAC/B,MAAIA,KAAK,CAALA,IAAAA,KAAJ,cAAA,EAAmC;AACjC;AAGF;;AAAA,MAAI;AACF,UAAMC,OAAO,GAAGpB,IAAI,CAAJA,KAAAA,CAAWmB,KAAK,CAAhC,IAAgBnB,CAAhB;;AAEA,QAAIoB,OAAO,CAAPA,MAAAA,KAAAA,MAAAA,IAA6BA,OAAO,CAAPA,MAAAA,KAAjC,OAAA,EAA6D;AAC3D,UAAI,CAACA,OAAO,CAAZ,IAAA,EAAmB;AACjB;AAEFjB;;AAAAA,MAAAA,cAAc,GAAGiB,OAAO,CAAxBjB,IAAAA;AACAkB,MAAAA,eAAe;AALjB,KAAA,MAMO,IAAID,OAAO,CAAPA,MAAAA,KAAJ,YAAA,EAAqC;AAC1CnB,MAAAA,QAAQ,CAARA,QAAAA,CAAAA,MAAAA,CAAAA,IAAAA;AAEH;AAAC,GAZF,CAYE,OAAA,EAAA,EAAW;AACXgB,IAAAA,OAAO,CAAPA,IAAAA,CAAa,0BAA0BE,KAAK,CAA/B,IAAA,GAAA,IAAA,GAAbF,EAAAA;AAEH;AAtBD,CAAA;AAwBA,CAAA,GAAA,qBAAA,CAAA,SAAA,EAAA,WAAA,EAAuB,MAAvB,IAAA;AACA,CAAA,GAAA,KAAA,CAAA,cAAA","sourcesContent":["/* globals __webpack_hash__ */\nimport fetch from 'next/dist/build/polyfills/unfetch'\nimport EventSourcePolyfill from './event-source-polyfill'\nimport { getEventSourceWrapper } from './error-overlay/eventsource'\nimport { setupPing } from './on-demand-entries-utils'\nimport { displayContent } from './fouc'\n\nif (!window.EventSource) {\n  window.EventSource = EventSourcePolyfill\n}\n\nconst data = JSON.parse(document.getElementById('__NEXT_DATA__').textContent)\nlet { assetPrefix, page } = data\nassetPrefix = assetPrefix || ''\nlet mostRecentHash = null\n/* eslint-disable-next-line */\nlet curHash = __webpack_hash__\nconst hotUpdatePath =\n  assetPrefix + (assetPrefix.endsWith('/') ? '' : '/') + '_next/static/webpack/'\n\n// Is there a newer version of this code available?\nfunction isUpdateAvailable() {\n  // __webpack_hash__ is the hash of the current compilation.\n  // It's a global variable injected by Webpack.\n  /* eslint-disable-next-line */\n  return mostRecentHash !== __webpack_hash__\n}\n\n// Webpack disallows updates in other states.\nfunction canApplyUpdates() {\n  return module.hot.status() === 'idle'\n}\n\n// This function reads code updates on the fly and hard\n// reloads the page when it has changed.\nasync function tryApplyUpdates() {\n  if (!isUpdateAvailable() || !canApplyUpdates()) {\n    return\n  }\n  try {\n    const res = await fetch(`${hotUpdatePath}${curHash}.hot-update.json`)\n    const jsonData = await res.json()\n    const curPage = page === '/' ? 'index' : page\n    // webpack 5 uses an array instead\n    const pageUpdated = (Array.isArray(jsonData.c)\n      ? jsonData.c\n      : Object.keys(jsonData.c)\n    ).some((mod) => {\n      return (\n        mod.indexOf(\n          `pages${curPage.substr(0, 1) === '/' ? curPage : `/${curPage}`}`\n        ) !== -1 ||\n        mod.indexOf(\n          `pages${\n            curPage.substr(0, 1) === '/' ? curPage : `/${curPage}`\n          }`.replace(/\\//g, '\\\\')\n        ) !== -1\n      )\n    })\n\n    if (pageUpdated) {\n      document.location.reload(true)\n    } else {\n      curHash = mostRecentHash\n    }\n  } catch (err) {\n    console.error('Error occurred checking for update', err)\n    document.location.reload(true)\n  }\n}\n\ngetEventSourceWrapper({\n  path: `${assetPrefix}/_next/webpack-hmr`,\n}).addMessageListener((event) => {\n  if (event.data === '\\uD83D\\uDC93') {\n    return\n  }\n\n  try {\n    const message = JSON.parse(event.data)\n\n    if (message.action === 'sync' || message.action === 'built') {\n      if (!message.hash) {\n        return\n      }\n      mostRecentHash = message.hash\n      tryApplyUpdates()\n    } else if (message.action === 'reloadPage') {\n      document.location.reload(true)\n    }\n  } catch (ex) {\n    console.warn('Invalid HMR message: ' + event.data + '\\n' + ex)\n  }\n})\n\nsetupPing(assetPrefix, () => page)\ndisplayContent()\n"]},"metadata":{},"sourceType":"script"}